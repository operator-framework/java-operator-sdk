name: Release project in specified directory

on:
  workflow_call:
    inputs:
      project-dir:
        type: string
        required: true
      version-branch:
        type: string
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout "${{inputs.version-branch}}" branch
        uses: actions/checkout@v3
        with:
          ref: "${{inputs.version-branch}}"

      - name: Set up Java and Maven
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
          cache: 'maven'
          
      - name: Move to specified directory
        working-directory: ${{inputs.project-dir}}
        run: |
          echo "Releasing from ${{inputs.project-dir}}"
        shell: bash

      - name: Change version to release version
        # Assume that RELEASE_VERSION will have form like: "v1.0.1". So we cut the "v"
        run: mvn ${MAVEN_ARGS} versions:set -DnewVersion="${RELEASE_VERSION:1}" versions:commit
        env:
          RELEASE_VERSION: ${{ github.event.release.tag_name }}

  # This is separate job because there were issues with git after release step, was not able to commit changes.
  update-working-version:
    runs-on: ubuntu-latest
    if: "success() && !contains(github.event.release.tag_name, 'RC')" # not sure we should keep this the RC part
    steps:
      - uses: actions/checkout@v3
        with:
          ref: "${{inputs.version-branch}}"

      - name: Set up Java and Maven
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
          cache: 'maven'

      - name: Change version to release version
        run: |
          mvn ${MAVEN_ARGS} versions:set -DnewVersion="${RELEASE_VERSION:1}" versions:commit
          mvn ${MAVEN_ARGS} -q build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-SNAPSHOT versions:commit
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
#          git commit -m "Set new SNAPSHOT version into pom files." -a
        env:
          RELEASE_VERSION: ${{ github.event.release.tag_name }}

#      - name: Push changes to branch
#        uses: ad-m/github-push-action@master
#        with:
#          branch: "${{inputs.version-branch}}"
#          github_token: ${{ secrets.GITHUB_TOKEN }}