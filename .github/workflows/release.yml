name: Release to Maven Central
env:
  MAVEN_ARGS: -V -ntp -e
on:
  release:
    types: [ released ]
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        if: ${{ startsWith(github.event.release.tag_name, 'v1.' ) }}
        with:
          ref: "v1"
      - uses: actions/checkout@v3
        if: ${{ startsWith(github.event.release.tag_name, 'v2.') }}
      - name: Set up Java and Maven
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: temurin
          cache: 'maven'
      - name: change version to release version
        # Assume that RELEASE_VERSION will have form like: "v1.0.1". So we cut the "v"
        run: ./mvnw ${MAVEN_ARGS} versions:set -DnewVersion="${RELEASE_VERSION:1}" versions:commit
        env:
          RELEASE_VERSION: ${{ github.event.release.tag_name }}
      - name: Release Maven package
        uses: samuelmeuli/action-maven-publish@v1
        with:
          maven_profiles: "release"
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}
          nexus_username: ${{ secrets.OSSRH_USERNAME }}
          nexus_password: ${{ secrets.OSSRH_TOKEN }}
      - uses: Eomm/why-don-t-you-tweet@v1
        # We don't want to tweet if the repository is not a public one
        if: ${{ !github.event.repository.private }}
        with:
          # GitHub event payload
          # https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#release
          tweet-message: "New ${{ github.event.repository.name }} release ${{ github.event.release.tag_name }}! Try it will it is HOT! ${{ github.event.release.html_url }} #release"
        env:
          # Get your tokens from https://developer.twitter.com/apps
          TWITTER_CONSUMER_API_KEY: ${{ secrets.TWITTER_CONSUMER_API_KEY }}
          TWITTER_CONSUMER_API_SECRET: ${{ secrets.TWITTER_CONSUMER_API_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
    
    

  # This is separate job because there were issues with git after release step, was not able to commit changes. See history.
  update-working-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        if: ${{ startsWith(github.event.release.tag_name, 'v1.' ) }}
        with:
          ref: "v1"
      - uses: actions/checkout@v3
        if: ${{ startsWith(github.event.release.tag_name, 'v2.') }}
      - name: Set up Java and Maven
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: temurin
          cache: 'maven'
      - name: change version to release version
        run: |
          ./mvnw ${MAVEN_ARGS} versions:set -DnewVersion="${RELEASE_VERSION:1}" versions:commit
          ./mvnw ${MAVEN_ARGS} -q build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-SNAPSHOT versions:commit
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Set new SNAPSHOT version into pom files." -a
        env:
          RELEASE_VERSION: ${{ github.event.release.tag_name }}
      - name: Push changes v1
        uses: ad-m/github-push-action@master
        if: ${{ startsWith(github.event.release.tag_name, 'v1.' ) }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: "v1"
      - name: Push changes v2
        uses: ad-m/github-push-action@master
        if: ${{ startsWith(github.event.release.tag_name, 'v2.' ) }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
