# End to end integration test which deploys the Tomcat operator to a Kubernetes
# (Kind) cluster and creates custom resources to verify the operator's functionality
name: MySQL Schema Operator End to End test
on:
  pull_request:
    branches: [ main, v1, next ]
  push:
    branches:
      - main
      - next
jobs:
  mysql_e2e_test:
    runs-on: ubuntu-latest
    env:
      KIND_CL_NAME: e2e-test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: clean resident local docker
        if: ${{ env.ACT }}
        continue-on-error: true
        run: |
          for DIMG in "$KIND_CL_NAME-control-plane "; do
            docker stop $DIMG ; docker rm $DIMG ;
          done ;
          sleep 1

      - name: Create Kubernetes KinD Cluster
        uses: container-tools/kind-action@v1.7.0
        with:
          cluster_name: e2e-test
          registry: false

      - name: Deploy MySQL DB
        working-directory: sample-operators/mysql-schema
        run: |
          kubectl create namespace mysql
          kubectl apply -f k8s/mysql-deployment.yaml
          kubectl apply -f k8s/mysql-service.yaml

      - name: Set up Java and Maven
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: adopt-hotspot
          cache: 'maven'

      - name: Build SDK
        run: mvn install -DskipTests

      - name: build jib
        working-directory: sample-operators/mysql-schema
        run: |
          mvn --version
          mvn -B package jib:dockerBuild jib:buildTar -Djib-maven-image=mysql-schema-operator -DskipTests
          kind load image-archive target/jib-image.tar --name=${{ env.KIND_CL_NAME }}

      - name: Apply CRDs
        working-directory: sample-operators/mysql-schema
        run: |
          kubectl apply -f target/classes/META-INF/fabric8/mysqlschemas.mysql.sample.javaoperatorsdk-v1.yml            

      - name: Deploy MySQL Operator
        working-directory: sample-operators/mysql-schema
        run: |
          kubectl apply -f k8s/operator.yaml

      - name: Run E2E Tests
        working-directory: sample-operators/mysql-schema
        run: mvn -B test -P end-to-end-tests

      - name: Dump state
        if: ${{ failure() }}
        run: |
          set +e
          echo "All namespaces"
          kubectl get ns
          echo "All objects in mysql"
          kubectl get all -n mysql-schema-test" -o yaml
          echo "Output of mysql pod"
          kubectl logs -l app=mysql-schema-operator -n mysql-schema
          echo "All objects in mysql-schema-test"
          kubectl get deployment,pod,tomcat,webapp -n mysql-schema-test" -o yaml
